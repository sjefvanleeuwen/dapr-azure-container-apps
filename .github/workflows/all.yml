on:
  workflow_dispatch:
    branches:
      - main
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - provision/dapr.bicep
name: Deploy Environment
jobs:
  deploy-environment:
    runs-on: ubuntu-latest
    steps: 
      # Checkout code
      - uses: actions/checkout@main
        # Log into Azure
      - uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy aca
        uses: azure/arm-deploy@v1
        with:
          deploymentMode: Incremental
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./provision/environment.bicep
          parameters: ./provision/environment.parameters.json
          failOnStdErr: false
      - name: deploy state storage
        uses: azure/arm-deploy@v1
        with:
          deploymentMode: Incremental
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./provision/statestore.bicep
          parameters: ./provision/storage.parameters.json
          failOnStdErr: false
      - name: deploy pubsub
        uses: azure/arm-deploy@v1
        with:
          deploymentMode: Incremental
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./provision/pubsub.bicep
          parameters: ./provision/pubsub.parameters.json
          failOnStdErr: false
    - name: deploy container registry
      uses: azure/arm-deploy@v1
      with:
        deploymentMode: Incremental
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template:  ./provision/registry-setup.bicep
        failOnStdErr: false
    - name: docker push checkout app
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
         password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        cd src/services/checkout
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/checkout:${{ github.sha }}
        docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/checkout:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/checkout:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/checkout:latest
        cd src/services/order-processor
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/order:${{ github.sha }}
        docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/order:${{ github.sha }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/order:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/order:latest
